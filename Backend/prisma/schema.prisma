// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id  String    @id
  name     String
  email    String    @unique
  password String
  phone    String
  address  String
  bookings Booking[]
  reviews  Review[]
}

model Booking {
  booking_id String   @id
  spot_id    String
  name       String
  price      Float
  amount     Int
  check_in   DateTime
  check_out  DateTime
  status     String   @default("Pending")
  user_id    String
  user       User     @relation(fields: [user_id], references: [user_id])

  createdAt DateTime @default(now())
}

model Campaign {
  spot_id         Int    @id @default(autoincrement())
  name            String
  location        String
  price_per_night Float
  capacity        Int
  features_id     Int

  feature Feature @relation(fields: [features_id], references: [features_id])
}

model Feature {
  features_id  Int     @id @default(autoincrement())
  feature_name String
  description  String?
  image_url    String?
  available    Boolean @default(true)
  is_paid      Boolean @default(false)
  type         String?
  rating       Float? // optional
  popularity   Int     @default(0)
  category     String?

  campaigns Campaign[]
}

model Review {
  review_id Int      @id @default(autoincrement())
  user_id   String
  spot_id   String
  rating    Int // from 1 to 5
  review    String // âœ… the actual comment
  createdAt DateTime @default(now())

  user User @relation(fields: [user_id], references: [user_id])
}
